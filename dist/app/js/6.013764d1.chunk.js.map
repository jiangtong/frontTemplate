{"version":3,"sources":["webpack:///./src/pages/Teacher/common/assets/styles/index.module.less","webpack:///./src/pages/Teacher/common/assets/styles/index.module.css","webpack:///./src/pages/Teacher/common/assets/styles/index.module.scss","webpack:///./src/utils/echartsConfig.js","webpack:///./src/components/Echarts/index.js","webpack:///./src/pages/Teacher/Survey/TeacherNumbers.js","webpack:///./src/pages/Teacher/Survey/TestEchart.js","webpack:///./src/pages/Teacher/Survey/Tinymce.js","webpack:///./src/pages/Teacher/Survey/index.js"],"names":["module","exports","seriesCnt","backgroundColor","titleColor","subtitleColor","textColorShow","textColor","markTextColor","color","borderColor","borderWidth","visualMapColor","legendTextColor","kColor","kColor0","kBorderColor","kBorderColor0","kBorderWidth","lineWidth","symbolSize","symbol","symbolBorderWidth","lineSmooth","graphLineWidth","graphLineColor","mapLabelColor","mapLabelColorE","mapBorderColor","mapBorderColorE","mapBorderWidth","mapBorderWidthE","mapAreaColor","mapAreaColorE","axes","type","name","axisLineShow","axisLineColor","axisTickShow","axisTickColor","axisLabelShow","axisLabelColor","splitLineShow","splitLineColor","splitAreaShow","splitAreaColor","axisSeperateSetting","toolboxColor","toolboxEmpasisColor","tooltipAxisColor","tooltipAxisWidth","timelineLineColor","timelineLineWidth","timelineItemColor","timelineItemColorE","timelineCheckColor","timelineCheckBorderColor","timelineItemBorderWidth","timelineControlColor","timelineControlBorderColor","timelineControlBorderWidth","timelineLabelColor","datazoomBackgroundColor","datazoomDataColor","datazoomFillColor","datazoomHandleColor","datazoomHandleWidth","datazoomLabelColor","Echart","props","echarts","registerTheme","echartsConfig","echartRef","React","createRef","onEvents","click","onChartClick","params","this","onClickAction","style","height","className","option","data","notMerge","theme","ref","Component","Teachervaluebers","state","eventId","pageAlarmStrategy","value","data1","total","data2","span","width","tooltip","trigger","axisPointer","lineStyle","textStyle","fontSize","legend","icon","itemWidth","itemHeight","top","item","grid","left","right","containLabel","xAxis","boundaryGap","axisLabel","rotate","yAxis","series","label","normal","show","position","barWidth","index","itemStyle","padding","title","text","x","fontWeight","formatter","bottom","radius","avoidLabelOverlap","center","labelLine","emphasis","shadowBlur","shadowOffsetX","shadowColor","withRouter","TestEchart","id","cssModule","color_name","lessModule","color_ccc","scssModule","apiKey","initialValue","init","menubar","plugins","OurfacultyComp","onClick","obj","setState","prevState","count","Tinymce","join","TeacherNumbers"],"mappings":"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","file":"app/js/6.013764d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"color_ccc\":\"color_ccc--HSq9L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"className\":\"className--2LVjW\",\"color_name\":\"color_name--1-WSF className--2LVjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color\":\"color--1BzT7\"};","/** @format */\n\nexport default {\n    seriesCnt: '3',\n    backgroundColor: 'rgba(252,252,252,0)',\n    titleColor: '#666666',\n    subtitleColor: '#999999',\n    textColorShow: false,\n    textColor: '#333',\n    markTextColor: '#ffffff',\n    color: ['#3fb1e3', '#6be6c1', '#626c91', '#a0a7e6', '#c4ebad', '#96dee8'],\n    borderColor: '#ccc',\n    borderWidth: 0,\n    visualMapColor: ['#2a99c9', '#afe8ff'],\n    legendTextColor: '#999999',\n    kColor: '#e6a0d2',\n    kColor0: 'transparent',\n    kBorderColor: '#e6a0d2',\n    kBorderColor0: '#3fb1e3',\n    kBorderWidth: '2',\n    lineWidth: '3',\n    symbolSize: '8',\n    symbol: 'emptyCircle',\n    symbolBorderWidth: '2',\n    lineSmooth: false,\n    graphLineWidth: '1',\n    graphLineColor: '#cccccc',\n    mapLabelColor: '#ffffff',\n    mapLabelColorE: 'rgb(63,177,227)',\n    mapBorderColor: '#aaaaaa',\n    mapBorderColorE: '#3fb1e3',\n    mapBorderWidth: 0.5,\n    mapBorderWidthE: 1,\n    mapAreaColor: '#eeeeee',\n    mapAreaColorE: 'rgba(63,177,227,0.25)',\n    axes: [\n        {\n            type: 'all',\n            name: '通用坐标轴',\n            axisLineShow: true,\n            axisLineColor: '#cccccc',\n            axisTickShow: false,\n            axisTickColor: '#333',\n            axisLabelShow: true,\n            axisLabelColor: '#999999',\n            splitLineShow: true,\n            splitLineColor: ['#eeeeee'],\n            splitAreaShow: false,\n            splitAreaColor: ['rgba(250,250,250,0.05)', 'rgba(200,200,200,0.02)']\n        },\n        {\n            type: 'category',\n            name: '类目坐标轴',\n            axisLineShow: true,\n            axisLineColor: '#333',\n            axisTickShow: true,\n            axisTickColor: '#333',\n            axisLabelShow: true,\n            axisLabelColor: '#333',\n            splitLineShow: false,\n            splitLineColor: ['#ccc'],\n            splitAreaShow: false,\n            splitAreaColor: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n        },\n        {\n            type: 'value',\n            name: '数值坐标轴',\n            axisLineShow: true,\n            axisLineColor: '#333',\n            axisTickShow: true,\n            axisTickColor: '#333',\n            axisLabelShow: true,\n            axisLabelColor: '#333',\n            splitLineShow: true,\n            splitLineColor: ['#ccc'],\n            splitAreaShow: false,\n            splitAreaColor: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n        },\n        {\n            type: 'log',\n            name: '对数坐标轴',\n            axisLineShow: true,\n            axisLineColor: '#333',\n            axisTickShow: true,\n            axisTickColor: '#333',\n            axisLabelShow: true,\n            axisLabelColor: '#333',\n            splitLineShow: true,\n            splitLineColor: ['#ccc'],\n            splitAreaShow: false,\n            splitAreaColor: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n        },\n        {\n            type: 'time',\n            name: '时间坐标轴',\n            axisLineShow: true,\n            axisLineColor: '#333',\n            axisTickShow: true,\n            axisTickColor: '#333',\n            axisLabelShow: true,\n            axisLabelColor: '#333',\n            splitLineShow: true,\n            splitLineColor: ['#ccc'],\n            splitAreaShow: false,\n            splitAreaColor: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n        }\n    ],\n    axisSeperateSetting: false,\n    toolboxColor: '#999999',\n    toolboxEmpasisColor: '#666666',\n    tooltipAxisColor: '#cccccc',\n    tooltipAxisWidth: 1,\n    timelineLineColor: '#626c91',\n    timelineLineWidth: 1,\n    timelineItemColor: '#626c91',\n    timelineItemColorE: '#626c91',\n    timelineCheckColor: '#3fb1e3',\n    timelineCheckBorderColor: 'rgba(63,177,227,0.15)',\n    timelineItemBorderWidth: 1,\n    timelineControlColor: '#626c91',\n    timelineControlBorderColor: '#626c91',\n    timelineControlBorderWidth: 0.5,\n    timelineLabelColor: '#626c91',\n    datazoomBackgroundColor: 'rgba(255,255,255,0)',\n    datazoomDataColor: 'rgba(222,222,222,1)',\n    datazoomFillColor: 'rgba(114,230,212,0.25)',\n    datazoomHandleColor: '#cccccc',\n    datazoomHandleWidth: '100',\n    datazoomLabelColor: '#999999'\n};\n","/** @format */\n\nimport React from 'react';\nimport echarts from 'echarts/lib/echarts';\nimport EchartsForReact from 'echarts-for-react/lib/core';\nimport echartsConfig from '@utils/echartsConfig';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/radar';\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/component/markLine';\n// import chinaMap from 'echarts/map/json/china.json';\n// 配置echarts常用主题\n// echarts.registerMap('china', chinaMap);\nclass Echart extends React.Component {\n    constructor(props) {\n        super(props);\n        // 注册样式\n        echarts.registerTheme('echartsConfig', echartsConfig);\n        this.echartRef = React.createRef();\n        this.onEvents = {\n            click: this.onChartClick.bind(this)\n        };\n    }\n\n    // componentDidMount() {}\n\n    onChartClick(params) {\n        if (this.props.onClickAction) this.props.onClickAction(params);\n    }\n\n    render() {\n        const { style = { height: '300px' }, className = '' } = this.props;\n        return (\n            <EchartsForReact\n                echarts={echarts}\n                className={className}\n                option={this.props.data}\n                // showLoading\n                notMerge\n                onEvents={this.onEvents}\n                style={style}\n                theme=\"echartsConfig\"\n                ref={this.echartRef}\n            />\n        );\n    }\n}\n\nexport default Echart;\n","/** @format */\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n// import highComponentFuc from '@pages/Teacher/common/HighComponent';\n// import TestEchart from '@pages/Teacher/Survey/TestEchart';\nimport '@pages/Teacher/common/assets/styles/index.less';\nimport { Row, Col } from 'antd';\nimport Echart from '@components/Echarts';\n// import Request from '@src/common/data-commen/api/teacher/index';\n// const HighFunUse = highComponentFuc('enterprisePracticeInfoList')(TestEchart);\nconst color = [\n    '#1890ff',\n    '#2FC25B',\n    '#D6C11A',\n    '#CC5C2A',\n    '#872ACC',\n    '#D6C11A'\n];\n\n// const color = [\n//     'rgba(36, 56, 94)',\n//     'rgba(42, 160, 207)',\n//     // 'rgba(118, 106, 99)',\n//     'rgba(192, 71, 161)',\n//     'rgba(73,160, 174)',\n//     'rgba(135,215, 226)'\n// ];\n\nclass Teachervaluebers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventId: ''\n        };\n    }\n\n    async pageAlarmStrategy() {\n        // const res1 = await Request.pageAlarmStrategy();\n        // console.log(res1);\n    }\n\n    async componentDidMount() {\n        this.pageAlarmStrategy();\n        // const res = await Request.enterprisePracticeInfoList();\n\n        // console.log(res);\n    }\n\n    render() {\n        const data = [\n            {\n                name: '不及格',\n                value: '48648'\n            },\n            {\n                name: '及格',\n                value: '234541'\n            },\n\n            {\n                name: '中',\n                value: '1002489'\n            },\n            {\n                name: '良',\n                value: '897140'\n            },\n            {\n                name: '优',\n                value: '139799'\n            }\n        ];\n        const data1 = [\n            {\n                name: '男',\n                value: '5565216',\n                total: '83.14'\n            },\n            {\n                name: '女',\n                value: '1128206.1',\n                total: '16.86'\n            }\n        ];\n        const data2 = [\n            {\n                name: '男',\n                value: [\n                    {\n                        name: '土木工程学院',\n                        value: '205429'\n                    },\n                    {\n                        name: '材料科学与工程学院',\n                        value: '117721'\n                    },\n                    {\n                        name: '经济与管理学院',\n                        value: '144697'\n                    },\n                    {\n                        name: '市政与环境工程学院',\n                        value: '160182'\n                    },\n                    {\n                        name: '建筑与规划学院',\n                        value: '83228'\n                    },\n                    {\n                        name: '书法学院',\n                        value: ''\n                    },\n                    {\n                        name: '交通科学与工程学院',\n                        value: '98775'\n                    },\n                    {\n                        name: '艺术设计学院',\n                        value: '81627'\n                    },\n                    {\n                        name: '测绘与勘查工程学院',\n                        value: '72795'\n                    },\n                    {\n                        name: '电气与计算机学院',\n                        value: '280547'\n                    }\n                ]\n            },\n            {\n                name: '女',\n                value: [\n                    {\n                        name: '土木工程学院',\n                        value: '55790'\n                    },\n                    {\n                        name: '材料科学与工程学院',\n                        value: '42273'\n                    },\n                    {\n                        name: '经济与管理学院',\n                        value: '216273'\n                    },\n                    {\n                        name: '市政与环境工程学院',\n                        value: '103917'\n                    },\n                    {\n                        name: '建筑与规划学院',\n                        value: '135504'\n                    },\n                    {\n                        name: '书法学院',\n                        value: ''\n                    },\n                    {\n                        name: '交通科学与工程学院',\n                        value: '20994'\n                    },\n                    {\n                        name: '艺术设计学院',\n                        value: '202791'\n                    },\n                    {\n                        name: '测绘与勘查工程学院',\n                        value: '39520'\n                    },\n                    {\n                        name: '电气与计算机学院',\n                        value: '87429'\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Col span={24}>\n                <Row className=\"bg-white chart-content\">\n                    <div className=\"clearfix\" style={{ width: '100%' }}>\n                        <Col span={24}>\n                            <Echart\n                                style={{ height: 540 }}\n                                data={{\n                                    tooltip: {\n                                        trigger: 'axis',\n                                        axisPointer: {\n                                            lineStyle: {\n                                                color: '#00FFC8'\n                                            }\n                                        },\n                                        textStyle: {\n                                            color: '#000',\n                                            fontSize: 12\n                                        }\n                                    },\n                                    color,\n                                    // color: [\n                                    // '#1890ff',\n                                    // '#2FC25B',\n                                    // '#13C2C2',\n                                    // '#D6C11A',\n                                    // '#CC5C2A',\n                                    // '#872ACC',\n                                    // '#5C9CF8',\n                                    // '#5059CA',\n                                    // '#EC7C72',\n                                    // '#2a99c9',\n                                    // '#61CAB2'\n                                    // ],\n                                    legend: {\n                                        icon: 'rect',\n                                        itemWidth: 12,\n                                        itemHeight: 5,\n                                        top: 0,\n                                        data: data2.map(item => item.name)\n                                    },\n                                    grid: {\n                                        left: '4%',\n                                        right: '7%',\n                                        containLabel: true\n                                    },\n                                    xAxis: {\n                                        // name: '学生类别',\n                                        type: 'category',\n                                        boundaryGap: true,\n                                        data:\n                                            (data2[0] &&\n                                                data2[0].value &&\n                                                data2[0].value.map(item => {\n                                                    return `${item.name}`;\n                                                })) ||\n                                            [],\n                                        axisLabel: {\n                                            rotate: 30\n                                        }\n                                    },\n                                    yAxis: [\n                                        // {\n                                        //     name: '流量(万GB)',\n                                        //     type: 'value'\n                                        // }\n                                        // {\n                                        //     name: '时长(万小时)',\n                                        //     type: 'value'\n                                        // }\n\n                                        {\n                                            name: '',\n                                            type: 'value'\n                                        }\n                                    ],\n                                    // , {\n                                    //     min: 0,\n                                    //     type: 'value',\n                                    //     name: '时长(万小时)',\n                                    //     boundaryGap: [0.2, 0.2]\n                                    // }\n                                    series: data2.map(item => {\n                                        return {\n                                            label: {\n                                                normal: {\n                                                    show: true,\n                                                    position: 'top'\n                                                }\n                                            },\n                                            name: item.name,\n                                            type: 'bar',\n                                            // stack: '总数',\n                                            // barWidth: '30%',\n                                            // yAxisIndex:\n                                            //     item.name === 'accutime'\n                                            //         ? 1\n                                            //         : 0,\n                                            // type:\n                                            //     item.name === 'accutime'\n                                            //         ? 'line'\n                                            //         : 'bar',\n                                            data: item.value\n                                        };\n                                    })\n                                }}\n                            ></Echart>\n\n                            <Echart\n                                style={{ height: 520 }}\n                                data={{\n                                    color,\n                                    tooltip: {\n                                        axisPointer: {\n                                            lineStyle: {\n                                                color: '#00FFC8'\n                                            }\n                                        },\n                                        textStyle: {\n                                            color: '#000'\n                                        }\n                                    },\n                                    grid: {\n                                        left: '5%',\n                                        right: '8%',\n                                        containLabel: true\n                                    },\n                                    xAxis: [\n                                        {\n                                            type: 'category',\n                                            data: data.map(item => {\n                                                return `${item.name}`;\n                                            })\n                                            // axisLabel: {\n                                            //     rotate: 40\n                                            // }\n                                            // name: '就医次数'\n                                        }\n                                    ],\n                                    yAxis: [\n                                        {\n                                            // name: '日均人次',\n                                            // name: '消费金额(元)',\n                                            // name: '人数',\n                                            type: 'value'\n                                        }\n                                    ],\n                                    series: [\n                                        {\n                                            name: '',\n                                            type: 'bar',\n                                            barWidth: '25%',\n                                            data: data.map(item => {\n                                                return {\n                                                    name: item.name,\n                                                    value: item.value\n                                                    // itemStyle: {\n                                                    //     color: color[index]\n                                                    // }\n                                                };\n                                            }),\n                                            label: {\n                                                normal: {\n                                                    show: true,\n                                                    position: 'top'\n                                                }\n                                            }\n                                            // markLine: {\n                                            //     data: [\n                                            //         {\n                                            //             type: 'average',\n                                            //             name: '平均值'\n                                            //         }\n                                            //     ]\n                                            // }\n                                        }\n                                    ]\n                                }}\n                            ></Echart>\n\n                            <Echart\n                                style={{ height: 520 }}\n                                data={{\n                                    color,\n                                    tooltip: {\n                                        axisPointer: {\n                                            lineStyle: {\n                                                color: '#00FFC8'\n                                            }\n                                        },\n                                        textStyle: {\n                                            color: '#000'\n                                        }\n                                    },\n                                    grid: {\n                                        left: '5%',\n                                        right: '5%',\n                                        containLabel: true\n                                    },\n                                    xAxis: [\n                                        {\n                                            type: 'category',\n                                            data: data.map(item => {\n                                                return item.name;\n                                            })\n                                            // ,\n                                            // axisLabel: {\n                                            //     rotate: 40\n                                            // }\n                                        }\n                                    ],\n                                    yAxis: [\n                                        {\n                                            name: '消费金额(元)',\n                                            type: 'value'\n                                        }\n                                    ],\n                                    series: [\n                                        {\n                                            name: '',\n                                            type: 'bar',\n                                            barWidth: '15%',\n                                            data: data.map((item, index) => {\n                                                return {\n                                                    name: item.name,\n                                                    value: item.value,\n                                                    itemStyle: {\n                                                        color: color[index]\n                                                    }\n                                                };\n                                            }),\n                                            label: {\n                                                normal: {\n                                                    show: true,\n                                                    position: 'top'\n                                                }\n                                            }\n                                            // markLine: {\n                                            //     data: [\n                                            //         {type: 'average', name: '平均值'}\n                                            //     ]\n                                            // }\n                                        }\n                                    ]\n                                }}\n                            ></Echart>\n\n                            <Echart\n                                style={{ height: 420, padding: '40px 0' }}\n                                data={{\n                                    title: {\n                                        text: '',\n                                        x: 'left',\n                                        textStyle: {\n                                            fontSize: 14,\n                                            fontWeight: 'normal'\n                                        }\n                                    },\n                                    tooltip: {\n                                        trigger: 'item',\n                                        formatter: '{a}<br/>{b} : {c} ({d}%)'\n                                    },\n                                    color,\n                                    // color: [\n                                    //     '#1890ff',\n                                    //     '#2FC25B',\n                                    //     '#1890FF',\n                                    //     '#13C2C2',\n                                    //     '#D6C11A',\n                                    //     '#CC5C2A',\n                                    //     '#872ACC',\n                                    //     '#D6C11A'\n                                    // ],\n                                    legend: {\n                                        bottom: 0,\n                                        left: 'center',\n                                        data:\n                                            data1 &&\n                                            data1.map(item => {\n                                                return item.name;\n                                            })\n                                    },\n                                    series: [\n                                        {\n                                            name: '',\n                                            type: 'pie',\n                                            radius: '50%',\n                                            avoidLabelOverlap: true,\n                                            center: ['50%', '50%'],\n                                            data: data1 || [],\n\n                                            // label: {\n                                            //     normal: {\n                                            //         position: 'inner',\n                                            //         formatter:\n                                            //             '{b}  \\n {d}%  \\n {c}万GB'\n                                            //     }\n                                            // },\n                                            labelLine: {\n                                                normal: {\n                                                    show: true\n                                                }\n                                            },\n                                            label: {\n                                                formatter: '{b} {d}% {c}小时'\n                                            },\n                                            itemStyle: {\n                                                emphasis: {\n                                                    shadowBlur: 10,\n                                                    shadowOffsetX: 0,\n                                                    shadowColor:\n                                                        'rgba(0, 0, 0, 0.5)'\n                                                }\n                                            }\n                                        }\n                                    ]\n                                }}\n                            ></Echart>\n                            {/* <HighFunUse style={this.props.style} {...this.props}></HighFunUse> */}\n                        </Col>\n                    </div>\n                </Row>\n            </Col>\n        );\n    }\n}\n\nexport default withRouter(Teachervaluebers);\n","/** @format */\n\nimport React, { Component } from 'react';\n// import Echart from '@components/Echarts';\nimport { withRouter } from 'react-router-dom';\n// import lottie from 'lottie-web';\n// import highComponentFuc from '@pages/Teacher/commen/HighComponent';\nimport '../common/assets/styles/index.less';\nimport lessModule from '../common/assets/styles/index.module.less';\nimport cssModule from '../common/assets/styles/index.module.css';\nimport '../common/assets/styles/index.css';\n// import animation from './pencil.json';\nimport scssModule from '../common/assets/styles/index.module.scss';\nimport '../common/assets/styles/index.scss';\n\n// const data = [\n//     'Racing car sprays burning fuel into crowd.',\n//     'Japanese princess to wed commoner.',\n//     'Australian walks 100km after outback crash.',\n//     'Man charged over missing wedding girl.',\n//     'Los Angeles battles huge wildfires.'\n// ];\n\n// 装饰器写法\n// @highComponentFuc('teacherType4College')\nclass TestEchart extends Component {\n    async componentDidMount() {\n        // lottie.loadAnimation({\n        //     container: document.getElementById('name'),\n        //     renderer: 'svg',\n        //     loop: true,\n        //     autoplay: true,\n        //     animationData: animation\n        // });\n        // let res1 = await Request.pageAlarmStrategy();\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ height: 50 }} id=\"name\"></div>\n\n                <div className=\"csscolor\">css</div>\n                <div className={cssModule.color_name}>cssModule</div>\n\n                <div className=\"color\">less111</div>\n                <div className={lessModule.color_ccc}>lessModle</div>\n\n                <div className=\"scsscolor\">scss</div>\n                <div className={scssModule.color}>scssModule</div>\n\n                {/* <Echart\n                    onClickAction={params => {\n                        if (this.props.onClickAction)\n                            this.props.onClickAction(params);\n                    }}\n                    data={{\n                        title: {\n                            text: '全校授课教师分类数量以及占比',\n                            x: 'left',\n                            textStyle: {\n                                fontSize: 14,\n                                fontWeight: 'normal'\n                            }\n                        },\n                        tooltip: {\n                            trigger: 'item',\n                            formatter: '{a} <br/>{b} : {c} ({d}%)'\n                        },\n                        legend: {\n                            bottom: 0,\n                            left: 'center',\n                            data:\n                                this.props.data &&\n                                this.props.data.map(item => {\n                                    return item.name;\n                                })\n                        },\n                        series: [\n                            {\n                                type: 'pie',\n                                radius: '55%',\n                                center: ['50%', '50%'],\n                                data: this.props.data || [],\n                                itemStyle: {\n                                    emphasis: {\n                                        shadowBlur: 10,\n                                        shadowOffsetX: 0,\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                    }\n                                }\n                            }\n                        ]\n                    }}\n                    // eslint-disable-next-line react/jsx-closing-tag-location\n                ></Echart> */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(TestEchart);\n","import React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nexport default () => {\n    return (\n        <div>\n            <Editor\n                apiKey=\"v4mwno45c8b2t05finm76onri8cz8elcwtmxhmj0boctx5fl\"\n                initialValue=\"<p>This is the initial content of the editor</p>\"\n                init={{\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                    ]\n                }}\n            ></Editor>\n        </div>\n    );\n};\n","/** @format */\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n// import { Card } from 'antd';\nimport TeacherNumbers from '@pages/Teacher/Survey/TeacherNumbers';\nimport '../common/assets/styles/index.css';\nimport TestEchart from '@pages/Teacher/Survey/TestEchart';\n// import Error from '@pages/Teacher/Survey/Error';\nimport Tinymce from '@pages/Teacher/Survey/Tinymce';\n\n// function a1(a, b, c, d) {\n//     console.log(a, b, c, d);\n// }\n\n// a1();\n\nclass OurfacultyComp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            count: 0,\n            name: [1, 2]\n        };\n        // console.log('parent_constructor');\n    }\n\n    shouldComponentUpdate() {\n        // console.log(nextState, this.state);\n        // console.log(nextState.name === this.state.name);\n        return true;\n    }\n\n    onClick = () => {\n        // console.log(a, b, c, d);\n        const { name } = this.state;\n        const obj = [...name, 3];\n        this.setState(prevState => ({\n            count: prevState.count + 1,\n            name: obj\n        }));\n    };\n\n    componentDidMount() {}\n\n    render() {\n        return (\n            <>\n                <Tinymce></Tinymce>\n                {/* <Error></Error> */}\n                {/* <TestEchart></TestEchart> */}\n                {/* <div className=\"csscolor\">12311</div>12311 aaa */}\n                {/* <Card title=\"11\">dsdasd</Card> */}\n                <button onClick={this.onClick}>点击</button>\n                {this.state.name.join('.')}\n                <TeacherNumbers style={{ height: 300 }} />\n                {/* <Error></Error> */}\n                <TestEchart></TestEchart>\n                {/* <TestEchart></TestEchart>\n                 */}\n            </>\n        );\n    }\n}\n\nexport default withRouter(OurfacultyComp);\n"],"sourceRoot":""}